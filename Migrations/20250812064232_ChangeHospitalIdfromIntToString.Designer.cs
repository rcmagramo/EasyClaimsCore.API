// <auto-generated />
using System;
using EasyClaimsCore.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyClaimsCore.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812064232_ChangeHospitalIdfromIntToString")]
    partial class ChangeHospitalIdfromIntToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyClaimsCore.API.Data.Entities.APIRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HospitalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId", "MethodName")
                        .IsUnique();

                    b.ToTable("APIRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "GetRestToken"
                        },
                        new
                        {
                            Id = 2,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "GetRestMemberPIN"
                        },
                        new
                        {
                            Id = 3,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "SearchRestCaseRate"
                        },
                        new
                        {
                            Id = 4,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "SearchServerDateTime"
                        },
                        new
                        {
                            Id = 5,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "SearchDatabaseDateTime"
                        },
                        new
                        {
                            Id = 6,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "GetRestDoctorPAN"
                        },
                        new
                        {
                            Id = 7,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "CheckDoctorIfAccredited"
                        },
                        new
                        {
                            Id = 8,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "FetchServerVersion"
                        },
                        new
                        {
                            Id = 9,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "FindEmployer"
                        },
                        new
                        {
                            Id = 10,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "FetchUploadedClaimsMap"
                        },
                        new
                        {
                            Id = 11,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "FetchClaimStatus"
                        },
                        new
                        {
                            Id = 12,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "isClaimEligibleAPI"
                        },
                        new
                        {
                            Id = 13,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "eClaimsFileCheckAPI"
                        },
                        new
                        {
                            Id = 14,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "isEsoaValidAPI"
                        },
                        new
                        {
                            Id = 15,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "addRequiredApiDocument"
                        },
                        new
                        {
                            Id = 16,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "MockResponseAPI"
                        },
                        new
                        {
                            Id = 17,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "generatePBEFPDF"
                        },
                        new
                        {
                            Id = 18,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "eClaimsApiUpload"
                        },
                        new
                        {
                            Id = 19,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "FetchVoucherDetails"
                        },
                        new
                        {
                            Id = 20,
                            HospitalId = "H92006568",
                            IsActive = true,
                            MethodName = "isDRGValidAPI"
                        });
                });

            modelBuilder.Entity("EasyClaimsCore.API.Data.Entities.APIRequestLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("APIRequestId")
                        .HasColumnType("int");

                    b.Property<int>("ChargeableItems")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RequestData")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Requested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Responded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Response")
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Requested");

                    b.HasIndex("Status");

                    b.HasIndex("APIRequestId", "Requested");

                    b.ToTable("APIRequestLogs");
                });

            modelBuilder.Entity("EasyClaimsCore.API.Data.Entities.APIRequestLog", b =>
                {
                    b.HasOne("EasyClaimsCore.API.Data.Entities.APIRequest", "APIRequest")
                        .WithMany("APIRequestLogs")
                        .HasForeignKey("APIRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("APIRequest");
                });

            modelBuilder.Entity("EasyClaimsCore.API.Data.Entities.APIRequest", b =>
                {
                    b.Navigation("APIRequestLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
